<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <!--Default-->
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle, IsThemeIndependent=True}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="Margin" Value="-5,0" />
    </Style>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle, IsThemeIndependent=True}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <Style TargetType="ToolTip">
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="13" />
    </Style>
    <Style TargetType="dxe:HyperlinkEdit">
        <Setter Property="Margin" Value="-4" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryText}" />
        <Setter Property="NavigationUrl" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style TargetType="dxe:ImageEdit">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <Setter Property="ShowLoadDialogOnClickMode" Value="Never" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="ShowMenu" Value="{Binding HasImage, RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MenuTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dxe:ImageEditCopyToolButton ToolTip="{Binding Copy, Source={StaticResource ResourceProvider}}" />
                        <dxe:ImageEditToolButton ImageSource="{dx:SvgImageSource Uri='/Assets/Icon/Save.svg', Size='16,16'}" ToolTip="{Binding Save, Source={StaticResource ResourceProvider}}"
                                                 Command="{DXCommand Execute='@a($Window).DataContext.SaveImage(Source, Tag)'}" />
                        <dxe:ImageEditToolButton ImageSource="{dx:SvgImageSource Uri='/Assets/Icon/Expand.svg', Size='16,16'}" ToolTip="{Binding OriginalSize, Source={StaticResource ResourceProvider}}"
                                                 Command="{DXCommand '@a($Window).DataContext.OpenImageGallery(Tag)'}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MenuContainerTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Height="20" Margin="0,0,0,-10">
                        <Border Background="#BF000000" CornerRadius="10" />
                        <ContentPresenter Margin="10,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxe:RatingEdit">
        <Setter Property="ItemsCount" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxe:RatingEdit">
                    <StackPanel Orientation="Horizontal">
                        <dxe:RatingControl ItemsCount="{TemplateBinding ItemsCount}" Precision="{TemplateBinding Precision}"
                                           Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                        <TextBlock Margin="5,0" FontSize="15" FontWeight="Medium" VerticalAlignment="Top" 
                                   Text="{Binding Value, StringFormat='{}{0:0.0}', RelativeSource={RelativeSource TemplatedParent}}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Buttons-->
    <Style x:Key="CircularButton" TargetType="ButtonBase">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="/Assets/Font/#Material Design Icons" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Border" Width="50" Height="50" CornerRadius="50" BorderThickness="2"
                            BorderBrush="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" TargetName="Border" Value="0" />
                            <Setter Property="Background" TargetName="Border" Value="{dxi:ThemeResource { dxt:PaletteBrushThemeKey ResourceKey=Border}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Width" TargetName="Border" Value="45" />
                            <Setter Property="Height" TargetName="Border" Value="45" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolButton" TargetType="Button">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="/Assets/Font/#Material Design Icons" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Width="20" Height="20" CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="FontSize" Value="16" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MiniToolButton" TargetType="Button">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="/Assets/Font/#Material Design Icons" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Width="16" Height="16" CornerRadius="16">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="FontSize" Value="13" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatButton" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Height="30" MinWidth="30" Padding="5" CornerRadius="2">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Margin="3,3,3,0" FontSize="18" FontFamily="/Assets/Font/#Material Design Icons"
                                       Text="{TemplateBinding Tag}" VerticalAlignment="Center" />
                            <ContentPresenter />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImdbButton" TargetType="Button">
        <Setter Property="Visibility" Value="{DXBinding 'TopRating ge 1 and TopRating le 250', Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="#E6B91E">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock VerticalAlignment="Center" Padding="5,0" FontFamily="Impact" Text="IMDb" />
                            <ContentPresenter />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBlocks-->
    <Style x:Key="HeadlineTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="TitleTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
    </Style>
    <Style x:Key="SubheadingTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="Body1TextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="Body2TextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryText}" />
    </Style>

    <Style x:Key="DialogWindowStyle" TargetType="dx:DXDialogWindow">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Icon" Value="/Assets/Logo/Logo.ico" />
        <Setter Property="ResizeMode" Value="{Binding ResizeMode}" />
        <Setter Property="WindowStyle" Value="{Binding WindowStyle}" />
        <Setter Property="Width" Value="{DXBinding '@Self.Content.MinWidth + 20'}" />
        <Setter Property="Height" Value="{DXBinding '@Self.Content.MinHeight + 90'}" />
        <Setter Property="MinWidth" Value="{DXBinding '@Self.Content.MinWidth + 20'}" />
        <Setter Property="MinHeight" Value="{DXBinding '@Self.Content.MinHeight + 90'}" />        
        <Setter Property="CommandButtonsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CommandButtonStyle">
            <Setter.Value>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="10,0,0,0" />
                    <Setter Property="MinWidth" Value="90" />
                    <Setter Property="MinHeight" Value="30" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GenreTile" TargetType="dxlc:Tile">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="215" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="8,0,0,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Command" Value="{DXCommand '@s.IsMaximized=true'}" />
        <Setter Property="Header" Value="{Binding DisplayName}" />
        <Style.Triggers>
            <Trigger Property="IsMaximized" Value="True">
                <Setter Property="Header" Value="" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>